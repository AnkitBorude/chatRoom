
services:
  # ------------------ Redis ------------------
  redis:
    image: redis:7-alpine
    container_name: redis
    networks:
      - chatnet

  # ------------------ Backend replicas ------------------
  backend1:
    build:
      context: .                 # root context, so shared/ is visible
      dockerfile: backend/Dockerfile
    image: chatrooms-backend:v1.1
    environment:
      - ADMIN_USER=${ADMIN_USER}
      - ADMIN_PASS=${ADMIN_PASS}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - redis
    networks:
      - chatnet
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s  

  backend2:
    build:
      context: .
      dockerfile: backend/Dockerfile
    image: chatrooms-backend:v1.1
    environment:
      - ADMIN_USER=${ADMIN_USER}
      - ADMIN_PASS=${ADMIN_PASS}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - redis
      - backend1
    networks:
      - chatnet
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 6s 

  backend3:
    build:
      context: .
      dockerfile: backend/Dockerfile
    image: chatrooms-backend:v1.1
    environment:
      - ADMIN_USER=${ADMIN_USER}
      - ADMIN_PASS=${ADMIN_PASS}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - redis
      - backend2
    networks:
      - chatnet
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 7s 

  # ------------------ Nginx frontend ------------------
  nginx:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    container_name: nginx
    ports:
      - "80:80"
    depends_on: 
      backend1:
        condition: service_healthy 
      backend2: 
        condition: service_healthy 
      backend3: 
        condition: service_healthy
    networks:
      - chatnet

# ------------------ Shared Network ------------------
networks:
  chatnet:
    driver: bridge